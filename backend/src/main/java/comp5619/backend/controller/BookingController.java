package comp5619.backend.controller;

import comp5619.backend.models.Booking;
import comp5619.backend.repository.BookingRepository;

import java.sql.Time;
import java.text.ParseException;
import java.text.SimpleDateFormat;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.http.HttpStatus;
import org.springframework.http.ResponseEntity;
import org.springframework.stereotype.Controller;
import org.springframework.web.bind.annotation.GetMapping;
import org.springframework.web.bind.annotation.PathVariable;
import org.springframework.web.bind.annotation.PostMapping;
import org.springframework.web.bind.annotation.RequestBody;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestParam;
import org.springframework.web.bind.annotation.ResponseBody;

@Controller // This means that this class is a Controller
@RequestMapping(path = "/bookings")
public class BookingController {

    @Autowired // This means to get the bean called commentRepository
    // Which is auto-generated by Spring, we will use it to handle the data
    private BookingRepository bookingRepository;

    @GetMapping(path = "/getAllBookings/{id}")
    public @ResponseBody ResponseEntity<List<Map<String, Object>>> getAllBookingsByUserId(@PathVariable(name = "id") String user_id) {
        List<Map<String, Object>> result = bookingRepository.getAllBookingByUserId(user_id);
        if (result.size() == 0) {
            return ResponseEntity.status(HttpStatus.NO_CONTENT).body(result);
        }
        return ResponseEntity.status(HttpStatus.OK).body(result);
    }

    @PostMapping(path = "/deleteBooking")
    public @ResponseBody ResponseEntity<Object> deleteBookingById(@RequestBody Map<String, String> params) {
        
        String id = params.get("id");

        Map<String,Object> result = bookingRepository.getBookingById(id);

        if (result.size() == 0) {
            return ResponseEntity.status(HttpStatus.NO_CONTENT).body("No Content Found");
        }

        bookingRepository.deleteBookingById(id);

        return ResponseEntity.status(HttpStatus.OK).body("Update Success");
    }
}
