package comp5619.backend.controller;

import comp5619.backend.models.LikedService;
import comp5619.backend.repository.LikedServiceRepository;

import java.util.List;
import java.util.Map;

import org.apache.tomcat.util.buf.StringCache;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.http.HttpStatus;
import org.springframework.http.ResponseEntity;
import org.springframework.stereotype.Controller;
import org.springframework.web.bind.annotation.GetMapping;
import org.springframework.web.bind.annotation.PathVariable;
import org.springframework.web.bind.annotation.PostMapping;
import org.springframework.web.bind.annotation.RequestBody;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestParam;
import org.springframework.web.bind.annotation.ResponseBody;

@Controller // This means that this class is a Controller
@RequestMapping(path = "/likedServices")
public class LikedServiceController {

    @Autowired // This means to get the bean called commentRepository
    // Which is auto-generated by Spring, we will use it to handle the data
    private LikedServiceRepository likedServiceRepository;


    @GetMapping(path = "/getLikedServiceCount/{user_id}/{service_id}")
    public @ResponseBody ResponseEntity<Boolean> getLikedServiceCount(@PathVariable(name = "user_id") String user_id, @PathVariable(name = "service_id") String service_id) {
        int count = likedServiceRepository.getLikedServiceCount(user_id, service_id);
        if (count == 0) {
            return ResponseEntity.status(HttpStatus.OK).body(false);
        }
        return ResponseEntity.status(HttpStatus.OK).body(true);
    }

    @GetMapping(path = "/getLikedServicesById/{user_id}")
    public @ResponseBody ResponseEntity<List<Map<String, String>>> getLikedServicesById(@PathVariable(name = "user_id") String user_id) {
        return ResponseEntity.status(HttpStatus.OK).body(likedServiceRepository.getLikedServicesById(user_id));
    }

    @PostMapping(path = "/likeOrUnlike")
    public @ResponseBody ResponseEntity<Object> likeOrUnlikeService(@RequestBody Map<String, Integer> params) {
        Integer user_id = params.get("user_id");
        Integer service_id = params.get("service_id");

        if (likedServiceRepository.getLikedServiceCount(user_id.toString(), service_id.toString()) != 0) {
            likedServiceRepository.unLikeService(user_id.toString(), service_id.toString());
            return ResponseEntity.status(HttpStatus.OK).body("Unlike Service Success");
        }

        LikedService newLikedService = new LikedService();
        newLikedService.setUser_id(user_id);
        newLikedService.setService_id(service_id);

        likedServiceRepository.save(newLikedService);

        return ResponseEntity.status(HttpStatus.OK).body("Like Service Success");
    }

}
